// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/substitutions/include/substitutions/unlabelled/pattern_split.struct.toml
/* proj-data
{
  "generated_from": "05ebc8db0a83166a867af7d7f268fbc5"
}
*/

#include "substitutions/unlabelled/pattern_split.dtg.h"

#include "substitutions/unlabelled/pattern_node.dtg.h"
#include "utils/graph.h"
#include <sstream>
#include <unordered_set>

namespace FlexFlow {
PatternSplit::PatternSplit(
    std::unordered_set<::FlexFlow::PatternNode> const &first,
    std::unordered_set<::FlexFlow::PatternNode> const &second)
    : first(first), second(second) {}
bool PatternSplit::operator==(PatternSplit const &other) const {
  return std::tie(this->first, this->second) ==
         std::tie(other.first, other.second);
}
bool PatternSplit::operator!=(PatternSplit const &other) const {
  return std::tie(this->first, this->second) !=
         std::tie(other.first, other.second);
}
} // namespace FlexFlow

namespace FlexFlow {
std::string format_as(PatternSplit const &x) {
  std::ostringstream oss;
  oss << "<PatternSplit";
  oss << " first=" << x.first;
  oss << " second=" << x.second;
  oss << ">";
  return oss.str();
}
std::ostream &operator<<(std::ostream &s, PatternSplit const &x) {
  return s << fmt::to_string(x);
}
} // namespace FlexFlow
